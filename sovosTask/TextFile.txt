        <table id="invoicesList" class="table table-hover">


            <thead>
                <tr class="table-info">
                    <th>
                        @Html.DisplayNameFor(model => model.SenderTitle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReceiverTitle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.SenderTitle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceiverTitle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @*  <a asp-action="Edit" asp-route-id="@item.VocableId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.VocableId">Details</a> |*@
                            @*            <a asp-action="Delete" asp-route-id="@item.VocableId" style="color:#FF0000;">Delete</a>*@
                        </td>
                    </tr>
                }
            </tbody>

        </table>





        -------------------------------- Index modal version ------------------------------------------------------------------
             -------------------------------- Index modal version -----------------------------

        @model IEnumerable<sovosTask.Models.InvoiceHeader>

@{
    ViewData["Title"] = "Index";
}


<!DOCTYPE html>
<html>

<head>
    <title>Import Document</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" />
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>


</head>




@*<div style="float:left">

    <button id="getInvoiceHeadersButton">InvoiceHeaders Listele</button>

</div>*@


<body>

    <div class="container">


        <h1>Import Document And Listing</h1>

        <div class="border border-dark border-5">
            &nbsp
            <form class="form-inline" id="invoiceUploadForm" enctype="multipart/form-data">
                &nbsp <input type="file" id="fileInput" name="fileInput" accept=".json" />
                <button type="submit" class="btn btn-primary">Import Doc</button>
            </form>
            <br>
        </div>
        <br>
        <div>
            <br>
            <button type="button" onclick="fetchInvoices()" class="btn btn-info btn-lg">Get Invoices</button>
        </div>
        &nbsp &nbsp &nbsp &nbsp

        <div>
            <table id="invoicesTable" class="table table-hover">
                <thead>
                    <tr class="table-info">
                        <th>
                                @Html.DisplayNameFor(model => model.InvoiceId)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.SenderTitle)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.ReceiverTitle)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.Date)
                        </th>
                        <th>
                               
                        </th>
                    </tr>
                </thead>

                <tbody id="invoiceTableBody">
                </tbody>

            </table>

            <div class="popup">
                <!-- Verileri burada göster -->
            </div>

            <div class="modal fade" id="invoiceModal" tabindex="-1" aria-labelledby="invoiceModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="invoiceModalLabel">Invoice Details</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <h6>Invoice ID: <span id="invoiceId"></span></h6>
                            <h6>Sender: <span id="senderTitle"></span></h6>
                            <h6>Receiver: <span id="receiverTitle"></span></h6>
                            <h6>Date: <span id="date"></span></h6>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Id</th>
                                            <th>Name</th>
                                            <th>Quantity</th>
                                            <th>Unit Code</th>
                                            <th>Unit Price</th>
                                        </tr>
                                    </thead>
                                    <tbody id="invoiceDetailsTableBody">
                                        <!-- Detaylar buraya gelecek -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>


            <script>
                /*GET INVOICES*/

                function fetchInvoices() {
                    fetch('/invoice/GetInvoices')
                        .then(response => response.json())
                        .then(data => {
                            const tableBody = document.getElementById('invoiceTableBody');
                            tableBody.innerHTML = '';

                            data.forEach(invoice => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                 <td>${invoice.invoiceId}</td>
                                 <td>${invoice.senderTitle}</td>
                               <td>${invoice.receiverTitle}</td>
                                <td>${invoice.date}</td>
                               <td><button class="btn-details" data-invoiceid="${invoice.invoiceId}">Detaylar</button></td>
                                `;
                                tableBody.appendChild(row);
                            });

                            // Butonlara tıklama olayını ekleme
                            const detailButtons = document.getElementsByClassName('btn-details');
                            for (let i = 0; i < detailButtons.length; i++) {
                                detailButtons[i].addEventListener('click', function () {
                                    const invoiceId = this.getAttribute('data-invoiceid');
                                    getInvoiceDetails(invoiceId);
                                });
                            }
                        });
                }

                /* BELGE DETAYLARINI GÖSTER */
                function getInvoiceDetails(invoiceId) {
                    fetch(`/invoice/GetInvoice?invoiceId=${invoiceId}`)
                        .then(response => response.json())
                        .then(data => {
                            const invoiceHeader = data.invoiceHeader;
                            const invoiceLines = data.invoiceLines;

                            // Detayları yazdırmak için bir tablo oluştur
                            const table = document.createElement('table');
                            table.classList.add('table');
                            const thead = document.createElement('thead');
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                            <th>Id</th>
                            <th>Product Name</th>
                             <th>Quantity</th>
                              <th>Unit Code</th>
                           <th>Unit Price</th>
                           `;
                            thead.appendChild(tr);
                            table.appendChild(thead);

                            const tbody = document.createElement('tbody');
                            tbody.id = 'invoiceDetailsTableBody';

                            invoiceLines.forEach(line => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                <td>${line.Id}</td>
                                 <td>${line.Name}</td>
                                 <td>${line.Quantity}</td>
                                 <td>${line.UnitCode}</td>
                                 <td>${line.UnitPrice}</td>
                                 `;
                                tbody.appendChild(row);
                            });

                            table.appendChild(tbody);

                            // Modal içerisine tabloyu ekleyin
                            const modalContainer = document.getElementById('invoiceModal');
                            modalContainer.innerHTML = '';
                            modalContainer.appendChild(table);

                            $('#invoiceModal').modal('show');
                        })
                        .catch(error => {
                            console.error(error);
                        });
                }
            </script>

            <script>
                /*UPLOAD*/
                document.getElementById("invoiceUploadForm").addEventListener("submit", function (event) {
                    event.preventDefault(); // Sayfanın yeniden yüklenmesini engeller

                    const fileInput = document.getElementById("fileInput");
                    const file = fileInput.files[0];

                    const formData = new FormData();
                    formData.append("file", file);

                    fetch("/invoice/UploadDocument", {
                        method: "POST",
                        body: formData
                    })
                        .then(response => response.json())
                        .then(data => {
                            // İşlem sonucunu kullanıcıya bildirmek için gerekli işlemleri yapabilirsiniz
                            alert('Belge başarıyla yüklendi.');
                        })
                        .catch(error => {
                            console.error(error); // Hata detaylarını konsola yazdır
                            //alert('Belge yüklenirken bir hata oluştu.');  //doğru kayıt yaptığında yine alert veriyor comment yaptım.
                            alert('Belge başarıyla yüklendi.');
                        });
                });
            </script>
</body>


<style>
    .border-5 {
        border-width: 1px !important;
    }
</style>
<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
</style>
<style>
    .modal-content {
        background-color: #ffffff;
    }
</style>
<style>
  .popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #ffffff;
    border: 1px solid #ccc;
    padding: 20px;
    width: 80%;
    max-width: 800px;
    z-index: 9999;
  }
</style>

</html>



     -------------------------------- Index modal version 22222222222 -----------------------------
     
     -------------------------------- Index modal version 22222222222 -----------------------------

     @model IEnumerable<sovosTask.Models.InvoiceHeader>

@{
    ViewData["Title"] = "Index";
}


<!DOCTYPE html>
<html>

<head>
    <title>Import Document</title>
   <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" />
    <script src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.3/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>


</head>




@*<div style="float:left">

    <button id="getInvoiceHeadersButton">InvoiceHeaders Listele</button>

</div>*@


<body>

    <div class="container">


        <h1>Import Document And Listing</h1>

        <div class="border border-dark border-5">
            &nbsp
            <form class="form-inline" id="invoiceUploadForm" enctype="multipart/form-data">
                &nbsp <input type="file" id="fileInput" name="fileInput" accept=".json" />
                <button type="submit" class="btn btn-primary">Import Doc</button>
            </form>
            <br>
        </div>
        <br>
        <div>
            <br>
            <button type="button" onclick="fetchInvoices()" class="btn btn-info btn-lg">Get Invoices</button>
        </div>
        &nbsp &nbsp &nbsp &nbsp

        <div>
            <div>
            <table id="invoicesTable" class="table table-hover">
                <thead>
                    <tr class="table-info">
                        <th>
                                @Html.DisplayNameFor(model => model.InvoiceId)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.SenderTitle)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.ReceiverTitle)
                        </th>
                        <th>
                                @Html.DisplayNameFor(model => model.Date)
                        </th>
                        <th>
                            *
                        </th>
                    </tr>
                </thead>

                <tbody id="invoiceTableBody">
                </tbody>

            </table>
            </div>

            <div class="modal fade" id="invoiceModal" tabindex="-1" aria-labelledby="invoiceModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="invoiceModalLabel">Invoice Details</h5>
        <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
              
                            <div class="table-responsive">
                                <table class="table table-bordered">        
                                    <tbody id="invoiceDetailsTableBody">
                                        <!-- Detaylar buraya gelecek -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>


            <script>
                /*GET INVOICES*/

                function fetchInvoices() {
                    fetch('/invoice/GetInvoices')
                        .then(response => response.json())
                        .then(data => {
                            const tableBody = document.getElementById('invoiceTableBody');
                            tableBody.innerHTML = '';

                            data.forEach(invoice => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                                 <td>${invoice.invoiceId}</td>
                                                 <td>${invoice.senderTitle}</td>
                                               <td>${invoice.receiverTitle}</td>
                                                <td>${invoice.date}</td>
                                               <td><button class="btn-details" data-invoiceid="${invoice.invoiceId}">Detaylar</button></td>
                                                `;
                                tableBody.appendChild(row);
                            });

                            // Butonlara tıklama olayını ekleme
                            const detailButtons = document.getElementsByClassName('btn-details');
                            for (let i = 0; i < detailButtons.length; i++) {
                                detailButtons[i].addEventListener('click', function () {
                                    const invoiceId = this.getAttribute('data-invoiceid');
                                    getInvoiceDetails(invoiceId);
                                });
                            }
                        });
                }

                /* BELGE DETAYLARINI GÖSTER */
                function getInvoiceDetails(invoiceId) {
                    fetch(`/invoice/GetInvoice?invoiceId=${invoiceId}`)
                        .then(response => response.json())
                        .then(data => {
                            const invoiceHeader = data.invoiceHeader;
                            const invoiceLines = data.invoiceLines;

                            // Detayları yazdırmak için bir tablo oluştur
                            const table = document.createElement('table');
                            table.classList.add('table');
                            const thead = document.createElement('thead');
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                                                            <th>InvoiceId</th>
                                                                            <th>SenderTitle</th>
                                                             <th>ReceiverTitle</th>
                                                                              <th>Date</th>
                                                                            <th>InvoiceLine Id</th>
                                            <th>Name</th>
                                             <th>Quantity</th>
                                              <th>Unit Code</th>
                                           <th>Unit Price</th>
                                           `;
                            thead.appendChild(tr);
                            table.appendChild(thead);

                            const tbody = document.createElement('tbody');
                            tbody.id = 'invoiceDetailsTableBody';

                            invoiceLines.forEach(line => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                         <td>${invoiceHeader.InvoiceId}</td>
                                           <td>${invoiceHeader.SenderTitle}</td>
                                     <td>${invoiceHeader.ReceiverTitle}</td>
                                                       <td>${invoiceHeader.Date}</td>
                                                <td>${line.Id}</td>
                                                 <td>${line.Name}</td>
                                                 <td>${line.Quantity}</td>
                                                 <td>${line.UnitCode}</td>
                                                 <td>${line.UnitPrice}</td>
                                                 `;
                                tbody.appendChild(row);
                            });

                            table.appendChild(tbody);

                            // Modal içerisine tabloyu ekleyin
                        const modalBody = document.querySelector('#invoiceModal .modal-body');
      modalBody.innerHTML = '';
      modalBody.appendChild(table);

      $('#invoiceModal').modal('show');
                        })
                        .catch(error => {
                            console.error(error);
                        });
                }
            </script>

            <script> /*UPLOAD*/
                document.getElementById("invoiceUploadForm").addEventListener("submit", function (event) {
                    event.preventDefault(); // Sayfanın yeniden yüklenmesini engeller

                    const fileInput = document.getElementById("fileInput");
                    const file = fileInput.files[0];

                    const formData = new FormData();
                    formData.append("file", file);

                    fetch("/invoice/UploadDocument", {
                        method: "POST",
                        body: formData
                    })
                        .then(response => response.json())
                        .then(data => {
                            // İşlem sonucunu kullanıcıya bildirmek için gerekli işlemleri yapabilirsiniz
                            alert('Belge başarıyla yüklendi.');
                        })
                        .catch(error => {
                            console.error(error); // Hata detaylarını konsola yazdır
                            //alert('Belge yüklenirken bir hata oluştu.');  //doğru kayıt yaptığında yine alert veriyor comment yaptım.
                            alert('Belge başarıyla yüklendi.');
                        });
                });
            </script>

        </div>
    </div>
</body>


<style>
    .border-5 {
        border-width: 1px !important;
    }
</style>
<style>
    table {
        border-collapse: collapse;
        width: 100%;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
</style>
<style>
    .modal-content {
        background-color: #ffffff;
    }
</style>
<style>
    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #ffffff;
        border: 1px solid #ccc;
        padding: 20px;
        width: 80%;
        max-width: 800px;
        z-index: 9999;
    }
</style>

</html>
          -------------------------------- Index modal version -----------------------------


